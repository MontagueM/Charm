<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:charm="clr-namespace:Charm"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.AeroLite">
    <!--  https://material.io/design/color/dark-theme.html#ui-application  -->

    <!--  Numbers come from the luminance  -->
    <Brush x:Key="BackgroundColour7">#121212</Brush>
    <Color x:Key="BackgroundColour7C">#121212</Color>
    <Brush x:Key="BackgroundColour14">#242424</Brush>
    <Color x:Key="BackgroundColour10C">#1a1a1a</Color>
    <Color x:Key="BackgroundColour14C">#242424</Color>
    <Brush x:Key="BackgroundColour20">#333333</Brush>
    <Brush x:Key="BackgroundColour30">#4d4d4d</Brush>
    <Brush x:Key="BackgroundColour50">#808080</Brush>
    <Brush x:Key="ForegroundColour100">#ffffff</Brush>
    <Brush x:Key="ForegroundColour90">#e6e6e6</Brush>
    <Brush x:Key="ForegroundColour80">#cccccc</Brush>
    <Brush x:Key="ForegroundColour75">#bfbfbf</Brush>
    <Brush x:Key="ForegroundColour70">#b3b3b3</Brush>
    <Brush x:Key="ForegroundColour50">#808080</Brush>

    <Brush x:Key="AccentColour">#4d56fc</Brush>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="100">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border>
                        <ScrollViewer
                            x:Name="ScrollViewer"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Auto">
                            <ScrollViewer.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">4</sys:Double>
                            </ScrollViewer.Resources>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundColour90}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
    </Style>

    <Style TargetType="RichTextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundColour90}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour7}" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour50}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border
                            Name="Border"
                            Margin="0,0,-4,0"
                            Background="{StaticResource BackgroundColour14}"
                            BorderBrush="{StaticResource BackgroundColour14}"
                            BorderThickness="1,1,1,1"
                            CornerRadius="2,2,0,0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,2,12,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColour30}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" Value="{StaticResource BackgroundColour30}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColour14}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BackgroundColour14}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColour75}" />
                            <Setter Property="Background" Value="{StaticResource BackgroundColour14}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="ButtonBackground"
                        Background="{StaticResource BackgroundColour14}"
                        BorderBrush="{StaticResource BackgroundColour30}"
                        BorderThickness="1">
                        <ContentPresenter Margin="1,1,1,1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource BackgroundColour50}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ButtonBackground"
                        Background="{StaticResource BackgroundColour14}"
                        BorderBrush="{StaticResource BackgroundColour30}"
                        BorderThickness="1">
                        <ContentPresenter Margin="1,1,1,1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource BackgroundColour50}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource BackgroundColour30}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour20}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    </Style>
    <Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="ButtonBackground"
                        Background="{StaticResource BackgroundColour14}"
                        BorderBrush="{StaticResource BackgroundColour30}"
                        BorderThickness="1">
                        <ContentPresenter Margin="1,1,1,1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource BackgroundColour50}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Background="{StaticResource BackgroundColour30}"
                CornerRadius="2" />
            <Track
                x:Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Margin="0,0,0,0" Style="{StaticResource ScrollBarThumb}">
                        <Thumb.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{StaticResource BackgroundColour14C}" />
                                        <GradientStop Offset="1.0" Color="{StaticResource BackgroundColour14C}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.BorderBrush>

                        <Thumb.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{StaticResource BackgroundColour14C}" />
                                        <GradientStop Offset="1.0" Color="{StaticResource BackgroundColour14C}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Background="{StaticResource BackgroundColour30}"
                CornerRadius="2" />
            <Track
                x:Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb Margin="0,1,0,1" Style="{StaticResource ScrollBarThumb}">

                        <Thumb.BorderBrush>

                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{StaticResource BackgroundColour14C}" />
                                        <GradientStop Offset="1.0" Color="{StaticResource BackgroundColour14C}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.BorderBrush>
                        <Thumb.Background>

                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{StaticResource BackgroundColour14C}" />
                                        <GradientStop Offset="1.0" Color="{StaticResource BackgroundColour14C}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource BackgroundColour30}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="Bg"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Track
                            x:Name="PART_Track"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.Thumb>
                                <Thumb themes:ScrollChrome.ScrollGlyph="VerticalGripper" Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour14}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource BackgroundColour7}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColour14}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
    </Style>


    <Style TargetType="{x:Type hx:Viewport3DX}">
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColour10C}" />
        <Setter Property="TextBrush" Value="{StaticResource ForegroundColour80}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="{StaticResource BackgroundColour30}"
                BorderBrush="{StaticResource ForegroundColour80}"
                BorderThickness="1"
                CornerRadius="0" />
            <Border
                Grid.Column="0"
                Margin="1"
                Background="{StaticResource BackgroundColour30}"
                BorderBrush="{StaticResource ForegroundColour80}"
                BorderThickness="0,0,1,0"
                CornerRadius="0" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource ForegroundColour80}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">

                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource BackgroundColour30}"
                                    BorderBrush="{StaticResource BackgroundColour50}"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BackgroundColour50}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>


    <Style TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColour80}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColour20}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BackgroundColour50}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="13"
                                Height="13"
                                Background="{StaticResource BackgroundColour14}"
                                BorderBrush="{StaticResource BackgroundColour20}"
                                BorderThickness="1"
                                CornerRadius="0">
                                <Path
                                    x:Name="CheckMark"
                                    Width="7"
                                    Height="7"
                                    Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                    SnapsToDevicePixels="False"
                                    Stroke="{StaticResource ForegroundColour90}"
                                    StrokeThickness="2" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="API Inspect Button" TargetType="Button">
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="BorderBrush" Value="#A9000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#008DFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#00579D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ReusableButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#AEFFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Grid x:Name="LayoutRoot" Background="Transparent">
                            <!--  Outer circle  -->
                            <Border
                                x:Name="outerBorder"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="100"
                                IsHitTestVisible="False"
                                Opacity="0"
                                RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                            <!--  Content  -->
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Trigger for mouse over  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <!--  Fade in and scale animation for the outer circle  -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Color animation for mainBorder background  -->
                                        <ColorAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#33FFFFFF"
                                            Duration="0:0:0.1" />
                                        <!--  Other animations for outerBorder  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.15"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.15"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <!--  Fade out and scale animation for the outer circle  -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Color animation for mainBorder background  -->
                                        <ColorAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="Transparent"
                                            Duration="0:0:0.1" />
                                        <!--  Other animations for outerBorder  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConsumableButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#A3FFFFFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Grid x:Name="LayoutRoot" Background="Transparent">
                            <!--  Outer  -->
                            <Border
                                x:Name="outerBorder"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                Panel.ZIndex="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="White"
                                BorderThickness="2"
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                Opacity="0"
                                RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                            <!--  Content  -->
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Trigger for mouse over  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <!--  Fade in and scale animation for the outer circle  -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Color animation for mainBorder background  -->
                                        <ColorAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#45FFFFFF"
                                            Duration="0:0:0.2" />
                                        <!--  Other animations for outerBorder  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />

                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                            From="1.2"
                                            To="1.1"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BounceEase
                                                    Bounces="1"
                                                    Bounciness="3"
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                            From="1.2"
                                            To="1.1"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BounceEase
                                                    Bounces="1"
                                                    Bounciness="3"
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <!--  Fade out and scale animation for the outer circle  -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Color animation for mainBorder background  -->
                                        <ColorAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="Transparent"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2" />

                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="outerBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargePerkButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropShadowMedium" TargetType="TextBlock">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="2"
                    Direction="320"
                    Opacity="0.7"
                    ShadowDepth="2"
                    Color="#1B1B1B" />
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
